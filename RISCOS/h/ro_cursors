/*******************************************************************
 * File:     ro_cursors
 * Purpose:  Manipulation of the cursor and control keys on the screen
 * Author:   Justin Fletcher
 * Date:     20 Jan 2004
 ******************************************************************/

#ifndef CURSORS_H
#define CURSORS_H

typedef enum {
    cvs_unchanged,
    cvs_visible,
    cvs_invisible
} cursorvisiblestate_t;

typedef enum {
    cks_unchanged,
    cks_copy,           /* Acorn-style cursor key copying */
    cks_character,      /* Simple characters (136-139) */
    cks_escaped         /* Escaped characters (0 then 136-139) (also affects F keys) */
} cursorkeystate_t;

typedef struct cursorstate_s {
    cursorvisiblestate_t    cursorvisiblestate_old;
    cursorvisiblestate_t    cursorvisiblestate_current;
    cursorkeystate_t        cursorkeystate_current;
    char cursorfkeystate_old[8]; /* OS_Byte values for the initial key mappings */
} cursorstate_t;

enum cursorkeycodes_e {
    cursorkeycode_left = 136,
    cursorkeycode_right = 137,
    cursorkeycode_down = 138,
    cursorkeycode_up = 139,

    cursorkeycode_escaped_delete = 127,
    cursorkeycode_escaped_end = 139,
    cursorkeycode_escaped_shift_end = 155,
    cursorkeycode_escaped_ctrl_end = 171,
    cursorkeycode_escaped_shift_ctrl_end = 187,

    cursorkeycode_escaped_f1 = 129,
    cursorkeycode_escaped_f2 = 130,
    cursorkeycode_escaped_f3 = 131,
    cursorkeycode_escaped_f4 = 132,
    cursorkeycode_escaped_f5 = 133,
    cursorkeycode_escaped_f6 = 134,
    cursorkeycode_escaped_f7 = 135,
    cursorkeycode_escaped_f8 = 136,
    cursorkeycode_escaped_f9 = 137,
    cursorkeycode_escaped_f10 = 202,
    cursorkeycode_escaped_f11 = 203,
    cursorkeycode_escaped_f12 = 204,

    cursorkeycode_escaped_shift_f1 = 145,
    cursorkeycode_escaped_shift_f2 = 146,
    cursorkeycode_escaped_shift_f3 = 147,
    cursorkeycode_escaped_shift_f4 = 148,
    cursorkeycode_escaped_shift_f5 = 149,
    cursorkeycode_escaped_shift_f6 = 150,
    cursorkeycode_escaped_shift_f7 = 151,
    cursorkeycode_escaped_shift_f8 = 152,
    cursorkeycode_escaped_shift_f9 = 153,
    cursorkeycode_escaped_shift_f10 = 218,
    cursorkeycode_escaped_shift_f11 = 219,
    cursorkeycode_escaped_shift_f12 = 220,

    cursorkeycode_escaped_shift_ctrl_f1 = 177,
    cursorkeycode_escaped_shift_ctrl_f2 = 178,
    cursorkeycode_escaped_shift_ctrl_f3 = 179,
    cursorkeycode_escaped_shift_ctrl_f4 = 180,
    cursorkeycode_escaped_shift_ctrl_f5 = 181,
    cursorkeycode_escaped_shift_ctrl_f6 = 182,
    cursorkeycode_escaped_shift_ctrl_f7 = 183,
    cursorkeycode_escaped_shift_ctrl_f8 = 184,
    cursorkeycode_escaped_shift_ctrl_f9 = 185,
    cursorkeycode_escaped_shift_ctrl_f10 = 250,
    cursorkeycode_escaped_shift_ctrl_f11 = 251,
    cursorkeycode_escaped_shift_ctrl_f12 = 252,

    cursorkeycode_escaped_left = 140,
    cursorkeycode_escaped_right = 141,
    cursorkeycode_escaped_down = 142,
    cursorkeycode_escaped_up = 143,
    cursorkeycode_escaped_pagedown = 158,
    cursorkeycode_escaped_pageup = 159,

    cursorkeycode_escaped_shift_pagedown = 142,
    cursorkeycode_escaped_shift_pageup = 143,

    cursorkeycode_escaped_shift_left = 156,
    cursorkeycode_escaped_shift_right = 157,
    cursorkeycode_escaped_shift_down = 158,
    cursorkeycode_escaped_shift_up = 159,

    cursorkeycode_escaped_shift_ctrl_left = 188,
    cursorkeycode_escaped_shift_ctrl_right = 189,
    cursorkeycode_escaped_shift_ctrl_down = 190,
    cursorkeycode_escaped_shift_ctrl_up = 191
};


/*************************************************** Gerph *********
 Function:     cursors_readstate
 Description:  Read the current state of the cursors
 Parameters:   state -> the cursor state to read into
 Returns:      none
 ******************************************************************/
void cursors_readstate(cursorstate_t *state);

/*************************************************** Gerph *********
 Function:     cursors_restore
 Description:  Restore the state to that in the configuration
 Parameters:   state -> the cursor state to restore to (if changed)
 Returns:      none
 ******************************************************************/
void cursors_restore(cursorstate_t *state);

/*************************************************** Gerph *********
 Function:      cursors_visible
 Description:   Turn on/off the cursor
 Parameters:    state -> the state to update
                on = 1 to turn on cursor, and 0 to turn off
 Returns:       none
 ******************************************************************/
void cursors_visible(cursorstate_t *state, int on);


/*************************************************** Gerph *********
 Function:      cursors_keys
 Description:   Codes returned by cursor keys
 Parameters:    state -> the state to update
                keys = cks_character for cursor keys inputting characters
                       cks_copy for cursor keys performing copy editing
                       cks_escaped for escaped input characters
 Returns:       none
 ******************************************************************/
void cursors_keys(cursorstate_t *state, cursorkeystate_t keys);

#endif
