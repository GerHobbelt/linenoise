name: linenoise
# This workflow represents a set of basic End-to-End tests
on:
  push:
    branches: 
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
jobs:
  build_release:
    runs-on: ubuntu-latest
    steps:       
      - name: Checkout
        uses: actions/checkout@v4       
        
      #- name: install cppunit
      #  run: sudo apt install -y libcppunit-dev

      - name: install doxygen
        run: sudo apt install -y doxygen

      - name: install CxxTest
        run: sudo apt install -y cxxtest

      - name: install CMake
        run: sudo apt install -y cmake

#      - name: install dependencies
#        run: sudo apt install -y <add dependencies here>
        
      - name: configure
        run: ./cmake_release.sh
        
      - name: make
        run: cd build/release && make
      
  create_release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build_release
    if: github.ref == 'refs/heads/releng' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Define the release name
        id: release_name
        run: |
          if [ ${GITHUB_REF/refs\/tags\//} != ${GITHUB_REF} ]; then
             echo "RELEASE_NAME=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
          elif [ ${GITHUB_REF/refs\/heads\//} = "releng" ]; then
             echo "RELEASE_NAME=releng" >> $GITHUB_OUTPUT
          else
             echo "RELEASE_NAME=${GITHUB_REF/refs\/heads\//}" >> $GITHUB_OUTPUT
          fi          
      - name: Create release with releng image
        if: github.ref == 'refs/heads/releng'
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          draft: true
          title: "Prerelease"
          files: linenoise-${{ steps.release_name.outputs.RELEASE_NAME }}-*.zip

      - name: Create release with release image
        if: startsWith(github.ref, 'refs/tags/')
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.release_name.outputs.RELEASE_NAME }}
          prerelease: false
          draft: true
          title: ${{ steps.release_name.outputs.RELEASE_NAME }}
          files: linenoise-${{ steps.release_name.outputs.RELEASE_NAME }}-*.zip